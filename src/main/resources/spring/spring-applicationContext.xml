<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.1.xsd
           http://www.springframework.org/schema/task
           http://www.springframework.org/schema/task/spring-task.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="xyz.taobaok.www.*"/>
    <!-- 加载外部属性配置文件 -->
    <bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:config/jdbc.properties" />
    </bean>
    <!-- 配置C3P0数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!-- 配置mybatis -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <property name="dataSource" ref="dataSource"></property>
        <property name="typeAliasesPackage" value="xyz.taobaok.www.bean"></property>
        <property name="mapperLocations">
            <list>
                <value>classpath:mybatis/*Mapper.xml</value>
            </list>
        </property>
    </bean>
    <!-- 扫描Mapper映射配置 -->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- <property name="basePackage" value="com.atguigu.atcrowdfunding.manager.dao,com.atguigu.atcrowdfunding.portal.dao"/> -->
        <property name="basePackage" value="xyz.taobaok.www.*.dao"/>
    </bean>
    <aop:config>
        <aop:advisor advice-ref="transactionAdvice" pointcut="execution(* xyz.taobaok.www..*Service.*(..))"/>
    </aop:config>
    <!-- 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="java.lang.Exception"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>


    <!-- spring 启用aop -->
    <aop:aspectj-autoproxy/>
    <!-- 激活各种对于bean类的注解标注 -->
    <context:annotation-config/>
    <!--定时任务-->
    <task:annotation-driven/>


    <!--    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
    <!--        <property name="dataSource" ref="dataSource"/>-->
    <!--    </bean>-->

    <!-- 自定义属性编辑器,以便spring bean可以注入java.util.Date 等类型,也可以注入自定义类型 -->
    <bean id="customEditorConfigurer" class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <!--        <property name="customEditors">-->
        <!--            <map>-->
        <!--                &lt;!&ndash; Date类型编辑器 &ndash;&gt;-->
        <!--                <entry key="java.util.Date" value="com.onedesk.dsp.utils.DatePropertyEditorUtil"/>-->
        <!--            </map>-->
        <!--        </property>-->
    </bean>

    <!-- 引入模块配置文件 -->
    <!--    <import resource="spring-redis.xml"/>-->
</beans>